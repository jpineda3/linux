trigger:
- rpi-4.19.y
- rpi-5.4.y
- staging-rpi/*

pr:
- rpi-4.19.y
- rpi-5.4.y

stages:
- stage: Builds
  jobs:
  - job: checkpatch
    condition: eq(variables['Build.Reason'], 'PullRequest')
    variables:
      BUILD_TYPE: checkpatch
      TARGET_BRANCH: $[ variables['System.PullRequest.TargetBranch'] ]
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      fetchDepth: 50
      clean: true
    - script: ./ci/travis/run-build.sh
      displayName: 'Checkpatch Script'

  - job: BuildDockerized
    strategy:
      matrix:
        bcm2709_arm_adi:
          DEFCONFIG: adi_bcm2709_defconfig
          ARCH: arm
          artifactName: 'adi_bcm2709_defconfig'
        bcm2711_arm_adi:
          DEFCONFIG: adi_bcm2711_defconfig
          ARCH: arm
          artifactName: 'adi_bcm2711_defconfig'
        bcmrpi_arm_adi:
          DEFCONFIG: adi_bcmrpi_defconfig
          ARCH: arm
          artifactName: 'adi_bcmrpi_defconfig'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      fetchDepth: 1
      clean: true
    - script: ./ci/travis/run-build-docker.sh
      displayName: "Build test for '$(DEFCONFIG)'"
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Agent.BuildDirectory)/s/arch/arm/boot/dts/overlays'
        contents: '$(Agent.BuildDirectory)/s/arch/arm/boot/dts/overlays/?(*.dtbo)'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifactName: '$(artifactName)'

- stage: PushArtifacts
  dependsOn: Builds
  variables:
    SOURCE_DIRECTORY: $(Build.SourcesDirectory)/bin
    KEY_FILE: $(key.secureFilePath)
  jobs:
  - job: SWDownloads
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/rpi-5.4.y'))
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          path: $(Build.SourcesDirectory)/bin
      - bash: ./ci/travis/artifacts.sh archive
        displayName: 'Archive artifacts'
      - task: DownloadSecureFile@1
        name: key
        displayName: 'Download rsa key'
        inputs:
          secureFile: 'id_rsa'
      - bash: ./ci/travis/artifacts.sh swdownloads
        env:
          DEST_SERVER: $(SERVER_ADDRESS)
        displayName: "PushToSWDownloads"

  - job: Artifactory
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/rpi-5.4.y'))
    pool:
      name: Default
      demands:
        - agent.name -equals lab2_b5
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          path: $(Build.SourcesDirectory)/bin
      - bash: ./ci/travis/artifacts.sh archive
        displayName: 'Archive artifacts'
      - bash: ./ci/travis/artifacts.sh artifactory
        env:
          USERNAME: $(USER)
          PASSWORD: $(PASS)
          ARTIFACTORY_PATH1: $(PATH1)
          ARTIFACTORY_PATH2: $(PATH2)
          ARTIFACTORY_PATH3: $(PATH3)
        displayName: "PushToArtifactory"
